root = true
# Remove the line below if you want to inherit .editorconfig settings from higher directories

# C# files
[*.cs]

# RCS1169: Make field read-only.
dotnet_diagnostic.rcs1169.severity = suggestion

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4
max_line_lengtheditorconfig = 150
# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion


# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:warning

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:warning
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:silent

# Code-block preferences
csharp_prefer_braces = true:silent
csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_prefer_static_anonymous_function = true:suggestion
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_prefer_extended_property_pattern = true:suggestion

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = no_change
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be_prefixedcamelcase.severity = warning
dotnet_naming_rule.private_or_internal_field_should_be_prefixedcamelcase.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_prefixedcamelcase.style = prefixedcamelcase

dotnet_naming_rule.static_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_field_should_be_pascal_case.symbols = static_field
dotnet_naming_rule.static_field_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.static_field.applicable_kinds = field
dotnet_naming_symbols.static_field.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.static_field.required_modifiers = static

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.prefixedcamelcase.required_prefix = _
dotnet_naming_style.prefixedcamelcase.required_suffix = 
dotnet_naming_style.prefixedcamelcase.word_separator = 
dotnet_naming_style.prefixedcamelcase.capitalization = camel_case

# StyleCop

dotnet_diagnostic.sa1000.severity = none
dotnet_diagnostic.sa1009.severity = none
dotnet_diagnostic.sa1011.severity = none
dotnet_diagnostic.sa1116.severity = none
dotnet_diagnostic.sa1101.severity = none
dotnet_diagnostic.sa1413.severity = none
dotnet_diagnostic.sa1309.severity = none
dotnet_diagnostic.sa1127.severity = none
dotnet_diagnostic.sa1200.severity = none
dotnet_diagnostic.sa1128.severity = none
dotnet_diagnostic.sa1133.severity = none
dotnet_diagnostic.sa1502.severity = none
dotnet_diagnostic.sa1600.severity = none
dotnet_diagnostic.sa1623.severity = none
dotnet_diagnostic.sa1633.severity = none
dotnet_diagnostic.sa1640.severity = none
dotnet_diagnostic.sa1649.severity = warning # File name should match first type name.
dotnet_diagnostic.sa1206.severity = none # required should appear before modifiers, still broken in sonar
dotnet_diagnostic.nu1507.severity = none

# ReSharper properties
resharper_blank_lines_around_single_line_auto_property = 1
resharper_csharp_empty_block_style = together
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_max_line_length = 150
resharper_csharp_place_type_constraints_on_same_line = false
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_keep_existing_declaration_block_arrangement = false
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_enum_arrangement = false
resharper_keep_existing_expr_member_arrangement = false
resharper_keep_existing_invocation_parens_arrangement = false
resharper_keep_existing_property_patterns_arrangement = false
resharper_place_accessorholder_attribute_on_same_line = false
resharper_align_linq_query = true
resharper_align_multiline_argument = true
resharper_align_multiline_array_and_object_initializer = true
resharper_align_multiline_extends_list = true
resharper_align_multiline_for_stmt = true
resharper_align_multiline_list_pattern = true
resharper_align_multiline_parameter = true
resharper_align_multiline_property_pattern = true
resharper_align_multiple_declaration = true
resharper_align_multline_type_parameter_constrains = true
resharper_align_multline_type_parameter_list = true
resharper_align_tuple_components = true
resharper_csharp_align_first_arg_by_paren = true
resharper_csharp_allow_far_alignment = true
resharper_indent_anonymous_method_block = true
resharper_wrap_after_primary_constructor_declaration_lpar = false
resharper_wrap_chained_method_calls = chop_if_long
resharper_align_multiline_binary_patterns = true
resharper_align_multiline_calls_chain = true
resharper_align_multiline_switch_expression = true
resharper_indent_primary_constructor_decl_pars = outside_and_inside
resharper_max_formal_parameters_on_line = 10
resharper_max_primary_constructor_parameters_on_line = 10
resharper_place_type_constraints_on_same_line = true

# Checks
dotnet_diagnostic.ca1001.severity = warning
dotnet_diagnostic.ca1009.severity = warning
dotnet_diagnostic.cc0108.severity = warning
dotnet_diagnostic.ca1851.severity = none # Possible multiple enumerations of IEnumerable collection

dotnet_diagnostic.cs1591.severity = warning # Missing XML comment for publicly visible type or member 'Type_or_Member'

# Nullable Reference Types

dotnet_diagnostic.cs8600.severity = warning # Converting null literal or possible null value to non-nullable type.
dotnet_diagnostic.cs8608.severity = error # Possible null reference argument.
dotnet_diagnostic.cs8609.severity = error # Possible null reference return.
dotnet_diagnostic.cs8610.severity = error # Nullability of reference types in type parameter doesn't match overridden member.
dotnet_diagnostic.cs8611.severity = error # Nullability of reference types in type parameter doesn't match partial method declaration.
dotnet_diagnostic.cs8612.severity = error # Nullability of reference types in type doesn't match implicitly implemented member.
dotnet_diagnostic.cs8613.severity = error # Nullability of reference types in return type doesn't match implicitly implemented member.
dotnet_diagnostic.cs8614.severity = error # Nullability of reference types in type of parameter doesn't match implicitly implemented member.
dotnet_diagnostic.cs8615.severity = error # Nullability of reference types in type doesn't match implemented member.
dotnet_diagnostic.cs8616.severity = error # Nullability of reference types in return type doesn't match implemented member.
dotnet_diagnostic.cs8617.severity = error # Nullability of reference types in type of parameter doesn't match implemented member.
dotnet_diagnostic.cs8618.severity = error # Non-nullable field is uninitialized. Consider declaring as nullable.
dotnet_diagnostic.cs8619.severity = error # Nullability of reference types in value doesn't match target type.
dotnet_diagnostic.cs8620.severity = warning # Argument cannot be null.
dotnet_diagnostic.cs8621.severity = error # Nullability of reference types in return type doesn't match delegate type parameter.
dotnet_diagnostic.cs8622.severity = error # Nullability of reference types in type of parameter doesn't match delegate type parameter.
dotnet_diagnostic.cs8624.severity = error # Argument cannot be used for parameter due to differences in the nullability of reference types.
dotnet_diagnostic.cs8625.severity = error # Cannot convert null literal to non-nullable reference type.
dotnet_diagnostic.cs8629.severity = error # Nullable value type may be null.
dotnet_diagnostic.cs8643.severity = error # Nullability of reference types in explicit interface specifier doesn't match interface implemented by the type.
dotnet_diagnostic.cs8644.severity = error # Type does not implement interface member. Nullability of reference types in interface implemented by the base type doesn't match.

# StyleCop

dotnet_diagnostic.sa1010.severity = none # Square bracket should not be proceeded by a space - gives false positive for collection initializers []

# CodeCracker

dotnet_diagnostic.cc0091.severity = none # Make method static - gives false positives and marks methods that use instance members
dotnet_diagnostic.CC0022.severity = none # StreamReader should be disposed - gives false positives
# Test projects overrides
[**/*Tests.cs]

dotnet_diagnostic.ca1707.severity = none # Identifiers should not contain underscores
dotnet_diagnostic.ca1851.severity = none # Possible multiple enumerations of IEnumerable collection

dotnet_diagnostic.sa1402.severity = none # File may only contain a single type
dotnet_diagnostic.sa0001.severity = none # XML comment analysis is disabled due to project configuration
dotnet_diagnostic.s4487.severity = none

resharper_possible_multiple_enumeration_highlighting = none
resharper_lambda_expression_can_be_made_static_highlighting = none
